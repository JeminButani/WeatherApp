{"ast":null,"code":"var _jsxFileName = \"F:\\\\WebDevelopment\\\\ReactJs\\\\ThappaTechnical\\\\WeatherApp\\\\weather-app\\\\src\\\\components\\\\temp.js\",\n    _s = $RefreshSig$();\n\n// api.openweathermap.org/data/2.5/weather?q=pune&units=metric&appid=8eab502f7d0f1b3248181bc0b17522f1\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport WeatherCard from \"./weatherCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Temp = () => {\n  _s();\n\n  require(\"dotenv\").config();\n\n  const [searchValue, setSearchValue] = useState(\"Gandhinagar\");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=8eab502f7d0f1b3248181bc0b17522f1`;\n      const res = await fetch(url);\n      const data = await res.json();\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search...\",\n          id: \"search\",\n          autoFocus: true,\n          className: \"searchTerm\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherInfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      tempInfo: tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Temp, \"BWZ2kyiiUKT7jv/cCauJDDoSER0=\");\n\n_c = Temp;\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"sources":["F:/WebDevelopment/ReactJs/ThappaTechnical/WeatherApp/weather-app/src/components/temp.js"],"names":["React","useState","useEffect","WeatherCard","Temp","require","config","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","url","res","fetch","data","json","temp","humidity","pressure","main","weathermood","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","error","console","log","e","target","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjBC,EAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,aAAD,CAA9C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,UAAIC,GAAG,GAAI,qDAAoDL,WAAY,sDAA3E;AAEA,YAAMM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,YAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA;AAAlB,UAA+BJ,IAAI,CAACK,IAA1C;AACA,YAAM;AAAEA,QAAAA,IAAI,EAAEC;AAAR,UAAwBN,IAAI,CAACO,OAAL,CAAa,CAAb,CAA9B;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAWR,IAAjB;AACA,YAAM;AAAES,QAAAA;AAAF,UAAYT,IAAI,CAACU,IAAvB;AACA,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBZ,IAAI,CAACa,GAAjC;AACA,YAAMC,gBAAgB,GAAG;AACvBZ,QAAAA,IADuB;AAEvBC,QAAAA,QAFuB;AAGvBC,QAAAA,QAHuB;AAIvBE,QAAAA,WAJuB;AAKvBE,QAAAA,IALuB;AAMvBC,QAAAA,KANuB;AAOvBE,QAAAA,OAPuB;AAQvBC,QAAAA;AARuB,OAAzB;AAUAjB,MAAAA,WAAW,CAACmB,gBAAD,CAAX;AACD,KAtBD,CAsBE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GA1BD;;AA4BA5B,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,WAAW,EAAC,WAFd;AAGE,UAAA,EAAE,EAAC,QAHL;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,SAAS,EAAC,YALZ;AAME,UAAA,KAAK,EAAEJ,WANT;AAOE,UAAA,QAAQ,EAAG0B,CAAD,IAAOzB,cAAc,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAPjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAExB,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA2BD,CAhED;;GAAML,I;;KAAAA,I;AAkEN,eAAeA,IAAf","sourcesContent":["// api.openweathermap.org/data/2.5/weather?q=pune&units=metric&appid=8eab502f7d0f1b3248181bc0b17522f1\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport WeatherCard from \"./weatherCard\";\r\n\r\nconst Temp = () => {\r\n  require(\"dotenv\").config();\r\n  const [searchValue, setSearchValue] = useState(\"Gandhinagar\");\r\n  const [tempInfo, setTempInfo] = useState({});\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=8eab502f7d0f1b3248181bc0b17522f1`;\r\n\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weathermood } = data.weather[0];\r\n      const { name } = data;\r\n      const { speed } = data.wind;\r\n      const { country, sunset } = data.sys;\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n      setTempInfo(myNewWeatherInfo);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search...\"\r\n            id=\"search\"\r\n            autoFocus\r\n            className=\"searchTerm\"\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWeatherInfo}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* our weather card  */}\r\n      <WeatherCard tempInfo={tempInfo} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temp;\r\n"]},"metadata":{},"sourceType":"module"}